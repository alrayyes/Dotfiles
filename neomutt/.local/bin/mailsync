#!/usr/bin/env fish
# Sync mail and give notification if there is new mail.

# Run only if user logged in (prevent cron errors)
pgrep -u "$USER" >/dev/null || exit
# Run only if not already running in other instance
pgrep -x mbsync >/dev/null && exit

# Needed fo notify-send to work properly when called fron cronjob
set -x DISPLAY ":0.0"

# Sync accounts passed as argument or all.
if count $argv >/dev/null
    set accounts $argv[1]
else
    set accounts (awk '/^Group/ {print $2}' "$HOME/.mbsyncrc")
end

# Parallelize multiple accounts
for account in $accounts
    # Check account for new mail. Notify if there is new content.
    set acc (echo "$account" | sed "s/.*\///")
    mbsync "$acc"
    set new (find "$HOME/.local/share/mail/$acc/INBOX/new/" "$HOME/.local/share/mail/$acc/Inbox/new/" "$HOME/.local/share/mail/$acc/inbox/new/" -type f -newer "/tmp/.mailsynclastrun" 2> /dev/null)
    set newcount (echo "$new" | sed '/^\s*$/d' | wc -l)
    if [ $newcount -gt "0" ]
        notify-send -i mutt "Mail" "$newcount new mail(s) in \`$acc\` account." &
        for file in $new
            # Extract subject and sender from mail.
            set from (awk '/^From: / && ++n ==1,/^\<.*\>:/' "$file" | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)' | awk '{ $1=""; if (NF>=3)$NF=""; print $0 }' | sed 's/^[[:blank:]]*[\"'\''\<]*//;s/[\"'\''\>]*[[:blank:]]*$//')
            set subject (awk '/^Subject: / && ++n == 1,/^\<.*\>: / && ++i == 2' "$file" | head -n-1 | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)' | sed 's/^Subject: //' | sed 's/^{[[:blank:]]*[\"'\''\<]*//;s/[\"'\''\>]*[[:blank:]]*$//' | tr -d '\n')
            notify-send -i mutt "$from:" "$subject" &
        end
    end
end

wait

mu index --muhome=~/.cache/mu --maildir=~/.local/share/mail 2>/dev/null

#Create a touch file that indicates the time of the last run of mailsync
touch "/tmp/.mailsynclastrun"
